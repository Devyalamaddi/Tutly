---
import RootLayout from "@layouts/RootLayout.astro";
import AssignmentPage from "../_components/SingleAssignment";
import db from "@/lib/db";

const currentUser = Astro.locals.user;
if (!currentUser) return null;

const assignment = await db.attachment.findUnique({
  where: {
    id: String(Astro.params.id),
  },
  include: {
    class: {
      include: {
        course: true,
      },
    },
    submissions: {
      where: {
        enrolledUser: {
          user: {
            id: currentUser.id,
          },
        },
      },
      include: {
        enrolledUser: {
          include: {
            submission: true,
          },
        },
        points: true,
      },
    },
  },
});

const assignment2 = await db.attachment.findUnique({
  where: {
    id: String(Astro.params.id),
  },
  include: {
    class: {
      include: {
        course: {
          where: {
            createdById: currentUser.id,
          },
        },
      },
    },
    submissions: {
      include: {
        enrolledUser: {
          include: {
            submission: true,
          },
        },
        points: true,
      },
    },
  },
});
const allStudents = await db.enrolledUsers.findMany({
  where: {
    course: {
      createdById: currentUser.id,
    },
    mentorUsername: {
      not: null,
    },
  },
});
const notSubmittedMentees = allStudents.filter((student) => {
  return !assignment?.submissions.some(
    (submission) => submission.enrolledUser.username === student.username
  );
});

const sortedAssignments = assignment2?.submissions.sort((a, b) => {
  if (b.enrolledUser.username > a.enrolledUser.username) {
    return -1;
  } else if (b.enrolledUser.username < a.enrolledUser.username) {
    return 1;
  } else {
    return 0;
  }
});
const isCourseAdmin =
  currentUser?.adminForCourses?.some((course) => course.id === assignment?.courseId) ?? false;
---

<RootLayout title="Assignments">
  <AssignmentPage
    params={{ id: String(Astro.params.id) }}
    currentUser={currentUser}
    assignment={assignment}
    assignments={sortedAssignments}
    notSubmittedMentees={notSubmittedMentees}
    isCourseAdmin={isCourseAdmin}
    client:load
  />
</RootLayout>
